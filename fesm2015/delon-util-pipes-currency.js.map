{"version":3,"file":"delon-util-pipes-currency.js","sources":["../../../../packages/util/pipes/currency/mega.pipe.ts","../../../../packages/util/pipes/currency/price.pipe.ts","../../../../packages/util/pipes/currency/cny.pipe.ts","../../../../packages/util/pipes/currency/module.ts","../../../../packages/util/pipes/currency/delon-util-pipes-currency.ts"],"sourcesContent":["import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\nimport { CurrencyMegaOptions, CurrencyService } from '@delon/util/format';\n\n@Pipe({ name: 'mega' })\nexport class CurrencyMegaPipe implements PipeTransform {\n  private isCN = false;\n  constructor(private srv: CurrencyService, @Inject(LOCALE_ID) locale: string) {\n    this.isCN = locale.startsWith('zh');\n  }\n\n  /**\n   * Large number format filter\n   *\n   * 大数据格式化\n   */\n  transform(value: number | string, options?: CurrencyMegaOptions): string {\n    const res = this.srv.mega(value, options);\n    return res.value + (this.isCN ? res.unitI18n : res.unit);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CurrencyFormatOptions, CurrencyService } from '@delon/util/format';\n\n@Pipe({ name: 'price' })\nexport class CurrencyPricePipe implements PipeTransform {\n  constructor(private srv: CurrencyService) {}\n  /**\n   * Format a number with commas as thousands separators\n   *\n   * 格式化货币，用逗号将数字格式化为千位分隔符\n   * ```ts\n   * 10000 => `10,000`\n   * 10000.567 => `10,000.57`\n   * ```\n   */\n  transform(value: number | string, options?: CurrencyFormatOptions): string {\n    return this.srv.format(value, options);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CurrencyCNYOptions, CurrencyService } from '@delon/util/format';\n\n@Pipe({ name: 'cny' })\nexport class CurrencyCNYPipe implements PipeTransform {\n  constructor(private srv: CurrencyService) {}\n\n  /**\n   * Converted into RMB notation.\n   *\n   * 转化成人民币表示法\n   */\n  transform(value: number | string, options?: CurrencyCNYOptions): string {\n    return this.srv.cny(value, options);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CurrencyCNYPipe } from './cny.pipe';\nimport { CurrencyMegaPipe } from './mega.pipe';\nimport { CurrencyPricePipe } from './price.pipe';\n\nconst PIPES = [CurrencyMegaPipe, CurrencyPricePipe, CurrencyCNYPipe];\n\n@NgModule({\n  declarations: PIPES,\n  exports: PIPES,\n})\nexport class CurrencyPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CurrencyCNYPipe as ɵa} from './cny.pipe';"],"names":[],"mappings":";;;MAIa,gBAAgB,CAAA;IAE3B,WAAoB,CAAA,GAAoB,EAAqB,MAAc,EAAA;QAAvD,IAAG,CAAA,GAAA,GAAH,GAAG,CAAiB;QADhC,IAAI,CAAA,IAAA,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACrC;AAED;;;;AAIG;IACH,SAAS,CAAC,KAAsB,EAAE,OAA6B,EAAA;AAC7D,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAC1C,OAAO,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;KAC1D;;;AAfF,IAAA,EAAA,IAAA,EAAA,IAAI,EAAC,IAAA,EAAA,CAAA,EAAE,IAAI,EAAE,MAAM,EAAE,EAAA,EAAA;;;;YAFQ,eAAe,EAAA;AAKA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAM,SAAC,SAAS,EAAA,EAAA,CAAA,EAAA;;;MCFhD,iBAAiB,CAAA;AAC5B,IAAA,WAAA,CAAoB,GAAoB,EAAA;QAApB,IAAG,CAAA,GAAA,GAAH,GAAG,CAAiB;KAAI;AAC5C;;;;;;;;AAQG;IACH,SAAS,CAAC,KAAsB,EAAE,OAA+B,EAAA;QAC/D,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACxC;;;AAdF,IAAA,EAAA,IAAA,EAAA,IAAI,EAAC,IAAA,EAAA,CAAA,EAAE,IAAI,EAAE,OAAO,EAAE,EAAA,EAAA;;;;YAFS,eAAe,EAAA;;;MCGlC,eAAe,CAAA;AAC1B,IAAA,WAAA,CAAoB,GAAoB,EAAA;QAApB,IAAG,CAAA,GAAA,GAAH,GAAG,CAAiB;KAAI;AAE5C;;;;AAIG;IACH,SAAS,CAAC,KAAsB,EAAE,OAA4B,EAAA;QAC5D,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KACrC;;;AAXF,IAAA,EAAA,IAAA,EAAA,IAAI,EAAC,IAAA,EAAA,CAAA,EAAE,IAAI,EAAE,KAAK,EAAE,EAAA,EAAA;;;;YAFQ,eAAe,EAAA;;;ACI5C,MAAM,KAAK,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,eAAe,CAAC,CAAC;MAMxD,kBAAkB,CAAA;;;AAJ9B,IAAA,EAAA,IAAA,EAAA,QAAQ,EAAC,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE,KAAK;AACnB,gBAAA,OAAO,EAAE,KAAK;AACf,aAAA,EAAA,EAAA;;;ACVD;;AAEG;;;;"}