{"version":3,"file":"browser.js","sources":["../../../../packages/util/browser/cookie.service.ts","../../../../packages/util/browser/copy.ts","../../../../packages/util/browser/is-empty.ts","../../../../packages/util/browser/scroll.service.ts","../../../../packages/util/browser/style.ts","../../../../packages/util/browser/browser.ts"],"sourcesContent":["import { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nexport interface CookieOptions {\n  path?: string;\n  domain?: string;\n  /**\n   * Expiration time, `number` is seconds\n   *\n   * 过期时间，`number` 类型表示秒数\n   */\n  expires?: number | Date | string;\n  secure?: boolean;\n  HttpOnly?: boolean;\n  SameSite?: boolean | 'lax' | 'strict' | 'none';\n}\n\n/**\n * A set of simple Cookie manipulation classes.\n *\n * 一组简单的 Cookie 操作类。\n */\n@Injectable({ providedIn: 'root' })\nexport class CookieService {\n  private get doc(): Document {\n    return this._doc || document;\n  }\n\n  /**\n   * Original cookie value\n   *\n   * 原始Cookie值\n   */\n  get cookie(): string {\n    return this.platform.isBrowser ? this.doc.cookie : '';\n  }\n\n  constructor(@Inject(DOCUMENT) private _doc: any, private platform: Platform) {}\n\n  /**\n   * Get all cookie key-value pairs\n   *\n   * 获取所有Cookie键值对\n   */\n  getAll(): { [key: string]: string } {\n    const ret: { [key: string]: string } = {};\n    const arr = this.cookie.split('; ');\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < arr.length; i++) {\n      const cookie = arr[i];\n      const index = cookie.indexOf('=');\n      if (index > 0) {\n        const name = decodeURIComponent(cookie.substring(0, index));\n        if (ret[name] == null) {\n          ret[name] = decodeURIComponent(cookie.substring(index + 1));\n        }\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Get the value of given cookie `key`\n   *\n   * 获取指定 `key` 的值\n   */\n  get(key: string): string | undefined {\n    return this.getAll()[key];\n  }\n\n  /**\n   * Sets a value for given cookie key\n   *\n   * 设置指定 Cookie 键的值\n   */\n  put(key: string, value: string | undefined, options?: CookieOptions): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    const opt = { path: '/', ...options };\n    if (typeof opt.expires === 'number') {\n      opt.expires = new Date(+new Date() + opt.expires * 1e3);\n    }\n    if (typeof opt.expires !== 'string') {\n      opt.expires = opt.expires ? opt.expires.toUTCString() : '';\n    }\n    const optStr: { [key: string]: string | boolean } = opt as any;\n    const attributes = Object.keys(optStr)\n      .filter(k => optStr[k] && optStr[k] !== true)\n      .map(k => `${k}=${(optStr[k] as string).split(';')[0]}`)\n      .join(';');\n    this.doc.cookie = encodeURIComponent(String(key)) + '=' + encodeURIComponent(String(value)) + (attributes ? '; ' + attributes : '');\n  }\n\n  /**\n   * Remove given cookie\n   *\n   * 移除指定 Cookie\n   */\n  remove(key: string, options?: CookieOptions): void {\n    this.put(key, undefined, options);\n  }\n\n  /**\n   * Remove all cookies\n   *\n   * 移除所有 Cookies\n   */\n  removeAll(): void {\n    this.doc.cookie = '';\n  }\n}\n","/**\n * Copy text to clipboard\n *\n * 复制字符串文档至剪贴板\n */\nexport function copy(value: string): Promise<string> {\n  return new Promise<string>((resolve): void => {\n    let copyTextArea: HTMLTextAreaElement | null = null;\n    try {\n      copyTextArea = document.createElement('textarea');\n      copyTextArea.style.height = '0px';\n      copyTextArea.style.opacity = '0';\n      copyTextArea.style.width = '0px';\n      document.body.appendChild(copyTextArea);\n      copyTextArea.value = value;\n      copyTextArea.select();\n      document.execCommand('copy');\n      resolve(value);\n    } finally {\n      if (copyTextArea && copyTextArea.parentNode) {\n        copyTextArea.parentNode.removeChild(copyTextArea);\n      }\n    }\n  });\n}\n","/**\n * Used to verify `<ng-content></ng-content>` is empty, useful for custom components.\n *\n * 用于校验 `<ng-content></ng-content>` 是否为空，自定义组件时蛮有用。\n */\nexport function isEmpty(element: HTMLElement): boolean {\n  const nodes = element.childNodes;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes.item(i);\n    if (node.nodeType === 1 && (node as HTMLElement).outerHTML.toString().trim().length !== 0) {\n      return false;\n    } else if (node.nodeType === 3 && node.textContent!.toString().trim().length !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ScrollService {\n  private _getDoc(): Document {\n    return this._doc || document;\n  }\n\n  private _getWin(): Window {\n    const doc = this._getDoc();\n    return doc.defaultView || window;\n  }\n\n  constructor(@Inject(DOCUMENT) private _doc: any, private platform: Platform) {}\n\n  /**\n   * 获取滚动条位置\n   * @param element 指定元素，默认 `window`\n   */\n  getScrollPosition(element?: Element | Window): [number, number] {\n    if (!this.platform.isBrowser) {\n      return [0, 0];\n    }\n\n    const win = this._getWin();\n    if (element && element !== win) {\n      return [(element as Element).scrollLeft, (element as Element).scrollTop];\n    } else {\n      return [win.pageXOffset, win.pageYOffset];\n    }\n  }\n\n  /**\n   * 设置滚动条位置\n   * @param element 指定元素\n   */\n  scrollToPosition(element: Element | Window | null | undefined, position: [number, number]): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    (element || this._getWin()).scrollTo(position[0], position[1]);\n  }\n\n  /**\n   * 设置滚动条至指定元素\n   * @param element 指定元素，默认 `document.body`\n   * @param topOffset 偏移值，默认 `0`\n   */\n  scrollToElement(element?: Element | null, topOffset: number = 0): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    if (!element) {\n      element = this._getDoc().body;\n    }\n\n    element.scrollIntoView();\n\n    const win = this._getWin();\n    if (win && win.scrollBy) {\n      win.scrollBy(0, element!.getBoundingClientRect().top - topOffset);\n\n      if (win.pageYOffset < 20) {\n        win.scrollBy(0, -win.pageYOffset);\n      }\n    }\n  }\n\n  /**\n   * 滚动至顶部\n   * @param topOffset 偏移值，默认 `0`\n   */\n  scrollToTop(topOffset: number = 0): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.scrollToElement(this._getDoc().body, topOffset);\n  }\n}\n","import { Renderer2 } from '@angular/core';\n\nfunction removeClass(el: HTMLElement, classMap: object, renderer: Renderer2): void {\n  // tslint:disable-next-line: forin\n  for (const i in classMap) {\n    renderer.removeClass(el, i);\n  }\n}\n\nfunction addClass(el: HTMLElement, classMap: any, renderer: Renderer2): void {\n  for (const i in classMap) {\n    if (classMap[i]) {\n      renderer.addClass(el, i);\n    }\n  }\n}\n\n/**\n * Update host component style `class`\n *\n * 更新宿主组件样式 `class`\n *\n * ```ts\n * updateHostClass(\n *  this.el.nativeElement,\n *  this.renderer,\n *  {\n *    [ 'classname' ]: true,\n *    [ 'classname' ]: this.type === '1',\n *    [ this.cls ]: true,\n *    [ `a-${this.cls}` ]: true\n *  })\n * ```\n */\nexport function updateHostClass(el: HTMLElement, renderer: Renderer2, classMap: object, preClean: boolean = false): void {\n  if (preClean === true) {\n    renderer.removeAttribute(el, 'class');\n  } else {\n    removeClass(el, classMap, renderer);\n  }\n  classMap = { ...classMap };\n  addClass(el, classMap, renderer);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}