{"version":3,"names":["WINDOW","InjectionToken","factory","defaultView","inject","DOCUMENT","Error","PAGE_VISIBILITY","doc","fromEvent","pipe","startWith","map","hidden","distinctUntilChanged","share"],"sources":["../../../../packages/util/token/window.ts","../../../../packages/util/token/page-visibility.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken } from '@angular/core';\n\n/**\n * Access to global `window` object\n *\n * 访问全局 `window` 对象\n */\nexport const WINDOW = new InjectionToken<Window>('WINDOW', {\n  factory: () => {\n    const { defaultView } = inject(DOCUMENT);\n    if (!defaultView) {\n      throw new Error('Window is not available');\n    }\n    return defaultView;\n  },\n});\n","import { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken } from '@angular/core';\nimport { fromEvent, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, share, startWith } from 'rxjs/operators';\n\n/**\n * Use the `visibilitychange` event to monitor whether the browser tab is visible, which is generally used when the user leaves the browser tab to temp interrupt the backend to continue sending requests\n *\n * 通过 `visibilitychange` 事件来监听浏览器选项卡是否可见，一般用于当用户离开应用时暂时中断后端持续发送请求时\n */\nexport const PAGE_VISIBILITY = new InjectionToken<Observable<boolean>>('PAGE_VISIBILITY`', {\n  factory: () => {\n    const doc = inject(DOCUMENT);\n    return fromEvent(doc, 'visibilitychange').pipe(\n      startWith(0),\n      map(() => !doc.hidden),\n      distinctUntilChanged(),\n      share(),\n    );\n  },\n});\n"],"mappings":"khBAQaA,EAAS,IAAIC,iBAAuB,SAAU,CACzDC,QAAS,WACC,IAAAC,EAAgBC,SAAOC,YAASF,YACxC,IAAKA,EACH,MAAM,IAAIG,MAAM,2BAElB,OAAOH,KCJEI,EAAkB,IAAIN,iBAAoC,mBAAoB,CACzFC,QAAS,WACP,IAAMM,EAAMJ,SAAOC,YACnB,OAAOI,YAAUD,EAAK,oBAAoBE,KACxCC,YAAU,GACVC,OAAI,WAAM,OAACJ,EAAIK,UACfC,yBACAC,c"}