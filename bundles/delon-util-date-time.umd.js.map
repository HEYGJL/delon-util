{"version":3,"file":"delon-util-date-time.umd.js","sources":["../../../../packages/util/date-time/time.ts","../../../../packages/util/date-time/picker.ts","../../../../packages/util/date-time/delon-util-date-time.ts"],"sourcesContent":["import addDays from 'date-fns/addDays';\nimport endOfDay from 'date-fns/endOfDay';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport endOfYear from 'date-fns/endOfYear';\nimport parse from 'date-fns/parse';\nimport parseISO from 'date-fns/parseISO';\nimport startOfDay from 'date-fns/startOfDay';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport startOfYear from 'date-fns/startOfYear';\nimport subMonths from 'date-fns/subMonths';\nimport subWeeks from 'date-fns/subWeeks';\nimport subYears from 'date-fns/subYears';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * Get the time range, return `[ Date, Date]` for the start and end dates\n *\n * 获取时间范围\n * @param type 类型，带 `-` 表示过去一个时间，若指定 `number` 表示天数\n * @param time 开始时间\n */\nexport function getTimeDistance(\n  type: 'today' | '-today' | 'yesterday' | 'week' | '-week' | 'month' | '-month' | 'year' | '-year' | number,\n  time?: Date | string | number,\n): [Date, Date] {\n  time = time ? (typeof time === 'string' ? parse(time, 'yyyy-MM-dd HH:mm:ss', new Date()) : new Date(time)) : new Date();\n  const options: { weekStartsOn: 1 } = { weekStartsOn: 1 };\n\n  let res: [Date, Date];\n  switch (type) {\n    case 'today':\n      res = [time, time];\n      break;\n    case '-today':\n      res = [addDays(time, -1), time];\n      break;\n    case 'yesterday':\n      res = [addDays(time, -1), addDays(time, -1)];\n      break;\n    case 'week':\n      res = [startOfWeek(time, options), endOfWeek(time, options)];\n      break;\n    case '-week':\n      res = [startOfWeek(subWeeks(time, 1), options), endOfWeek(subWeeks(time, 1), options)];\n      break;\n    case 'month':\n      res = [startOfMonth(time), endOfMonth(time)];\n      break;\n    case '-month':\n      res = [startOfMonth(subMonths(time, 1)), endOfMonth(subMonths(time, 1))];\n      break;\n    case 'year':\n      res = [startOfYear(time), endOfYear(time)];\n      break;\n    case '-year':\n      res = [startOfYear(subYears(time, 1)), endOfYear(subYears(time, 1))];\n      break;\n    default:\n      res = type > 0 ? [time, addDays(time, type)] : [addDays(time, type), time];\n      break;\n  }\n  return fixEndTimeOfRange(res);\n}\n\n/**\n * fix time is the most, big value\n */\nexport function fixEndTimeOfRange(dates: [Date, Date]): [Date, Date] {\n  return [startOfDay(dates[0]), endOfDay(dates[1])];\n}\n\nexport type ToDateOptions = string | { formatString?: string; defaultValue?: NzSafeAny };\n\n/**\n * Return the date parsed from string using the given format string\n * - If the argument is a number, it is treated as a timestamp.\n * @param formatString If parsing fails try to parse the date by pressing `formatString`\n * @param defaultValue If parsing fails returned default value, default: `new Date(NaN)`\n */\nexport function toDate(value: Date | string | number, options?: ToDateOptions): Date {\n  if (typeof options === 'string') options = { formatString: options };\n  const { formatString, defaultValue } = { formatString: 'yyyy-MM-dd HH:mm:ss', defaultValue: new Date(NaN), ...options };\n  if (value == null) {\n    return defaultValue;\n  }\n  if (value instanceof Date) {\n    return value;\n  }\n  if (typeof value === 'number' || (typeof value === 'string' && /[0-9]{10,13}/.test(value))) {\n    return new Date(+value);\n  }\n  let tryDate = parseISO(value);\n  if (isNaN(tryDate as NzSafeAny)) {\n    tryDate = parse(value, formatString!, new Date());\n  }\n\n  return isNaN(tryDate as NzSafeAny) ? defaultValue : tryDate;\n}\n","import addDays from 'date-fns/addDays';\nimport addSeconds from 'date-fns/addSeconds';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\nimport format from 'date-fns/format';\nimport { DisabledDateFn, DisabledTimeConfig, DisabledTimeFn } from 'ng-zorro-antd/date-picker';\n\n// TODO: timezone process\nexport class DateTimePickerUtil {\n  /**\n   * Current local time\n   *\n   * 当前本地时间\n   */\n  get now(): Date {\n    return new Date();\n  }\n  /**\n   * Current local date (not including time part)\n   *\n   * 当前本地日期（不包含时间部分）\n   */\n  get date(): Date {\n    return this.removeTime(this.now);\n  }\n  /**\n   * Remove the time part of the date\n   *\n   * 移除日期的时间部分\n   */\n  removeTime(d: Date): Date {\n    return new Date(d.toDateString());\n  }\n  /**\n   * Format date-time\n   *\n   * 格式化日期\n   */\n  format(d: number | Date, formatString: string = 'yyyy-MM-dd HH:mm:ss'): string {\n    return format(d, formatString);\n  }\n  private genTick(count: number): number[] {\n    return new Array(count).fill(0).map((_, idx) => idx);\n  }\n  /**\n   * Calculate the number of days between two dates, `0` means the same day\n   *\n   * 计算两个日期相差天数，`0` 表示同一天\n   */\n  getDiffDays(dateLeft: Date | number, dateRight?: Date | number): number {\n    return differenceInCalendarDays(dateLeft, typeof dateRight === 'number' ? addDays(this.date, dateRight) : dateRight || this.date);\n  }\n  /**\n   * Disabled Before date (Default: today), Generally serves `nzDisabledDate`\n   *\n   * 禁用之前日期（默认：今天），一般服务于 `nzDisabledDate`\n   */\n  disabledBeforeDate(options?: { offsetDays?: Date | number }): DisabledDateFn {\n    return (d): boolean => this.getDiffDays(d, options?.offsetDays) < 0;\n  }\n  /**\n   * Disabled After date (Default: today), Generally serves `nzDisabledDate`\n   *\n   * 禁用之后日期（默认：今天），一般服务于 `nzDisabledDate`\n   */\n  disabledAfterDate(options?: { offsetDays?: Date | number }): DisabledDateFn {\n    return (d): boolean => this.getDiffDays(d, options?.offsetDays) > 0;\n  }\n  private baseDisabledTime(type: 'before' | 'after', offsetSeconds?: number): DisabledTimeFn {\n    const tick24 = this.genTick(24);\n    const tick60 = this.genTick(60);\n    return (current): DisabledTimeConfig => {\n      const cur = current as Date;\n      if (cur == null) {\n        return {} as any;\n      }\n      const now = addSeconds(this.now, offsetSeconds || 0);\n      const nowHours = now.getHours();\n      const nowMinutes = now.getMinutes();\n      const curHours = cur.getHours();\n      const isToday = this.getDiffDays(this.removeTime(cur)) === 0;\n      return {\n        nzDisabledHours: () => {\n          if (!isToday) return [];\n          return type === 'before' ? tick24.slice(0, nowHours) : tick24.slice(nowHours + 1);\n        },\n        nzDisabledMinutes: () => {\n          if (isToday && curHours === nowHours) {\n            return type === 'before' ? tick60.slice(0, nowMinutes) : tick60.slice(nowMinutes + 1);\n          }\n          return [];\n        },\n        nzDisabledSeconds: () => {\n          if (isToday && curHours === nowHours && cur.getMinutes() === nowMinutes) {\n            const nowSeconds = now.getSeconds();\n            return type === 'before' ? tick60.slice(0, nowSeconds) : tick60.slice(nowSeconds + 1);\n          }\n          return [];\n        },\n      };\n    };\n  }\n  /**\n   * Disabled Before time (Default: now), Generally serves `nzDisabledTime`\n   *\n   * 禁用之前时间（默认：现在），一般服务于 `nzDisabledTime`\n   */\n  disabledBeforeTime(options?: { offsetSeconds?: number }): DisabledTimeFn {\n    return this.baseDisabledTime('before', options?.offsetSeconds);\n  }\n  /**\n   * Disabled After time (Default: now), Generally serves `nzDisabledTime`\n   *\n   * 禁用之后时间（默认：现在），一般服务于 `nzDisabledTime`\n   */\n  disabledAfterTime(options?: { offsetSeconds?: number }): DisabledTimeFn {\n    return this.baseDisabledTime('after', options?.offsetSeconds);\n  }\n}\n\nexport const dateTimePickerUtil = new DateTimePickerUtil();\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["parse","addDays","startOfWeek","endOfWeek","subWeeks","startOfMonth","endOfMonth","subMonths","startOfYear","endOfYear","subYears","startOfDay","endOfDay","parseISO","format","differenceInCalendarDays","addSeconds"],"mappings":"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"}